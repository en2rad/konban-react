{"version":3,"sources":["components/Context.jsx","components/Task.jsx","components/SelectUsers.jsx","components/FromTask.jsx","components/Column.jsx","components/TaskService.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Task","task","taskIndex","columnIndex","deleteTask","useContext","moveTask","className","user","date","title","text","onClick","SelectUsers","onChange","FormControl","variant","label","InputLabel","htmlFor","Select","ev","target","value","native","useStyles","makeStyles","createTask","display","flexDirection","justifyContent","padding","border","margin","FromTask","onClose","useState","setUser","setTitle","setText","onSubmit","preventDefault","trim","saveTask","type","Column","column","clearColumn","form","setFrom","name","tasks","length","map","bind","JSON","parse","localStorage","getItem","columns","App","data","setData","getTask","useCallback","a","TaskService","useEffect","setItem","stringify","prev","splice","Provider","id","Math","random","toLocaleString","substr","Date","toLocaleDateString","comment","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAIeA,EAFCC,IAAMC,gB,OCyBPC,MAxBf,YAAmD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,YACtBC,EAAeC,qBAAWR,GAA1BO,WACAE,EAAaD,qBAAWR,GAAxBS,SAER,OACG,sBAAKC,UAAU,mBAAf,UACK,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,kBAAd,SAAiCN,EAAKO,OACtC,sBAAMD,UAAU,oBAAhB,SAAqCN,EAAKQ,UAE9C,sBAAKF,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BN,EAAKS,QAClC,mBAAGH,UAAU,aAAb,SACCN,EAAKU,UAGV,sBAAKJ,UAAU,eAAf,UACI,wBAAQK,QAAS,kBAAMR,EAAWD,EAAaD,IAAYK,UAAU,wBAArE,oBACA,wBAAQK,QAAS,kBAAMN,EAASH,EAAaD,IAAYK,UAAU,wBAAnE,sB,wBCHDM,MAff,YAAoC,IAAbC,EAAY,EAAZA,SAGnB,OACI,eAACC,EAAA,EAAD,CAAaC,QAAQ,WAAWC,MAAM,MAAMV,UAAU,GAAtD,UACI,cAACW,EAAA,EAAD,CAAYC,QAAQ,+BACpB,eAACC,EAAA,EAAD,CAAQN,SAAU,SAACO,GAAD,OAAQP,EAASO,EAAGC,OAAOC,QAASC,QAAM,EAACP,MAAM,SAAnE,UACI,2CAAY,KACZ,4CAAY,KACZ,4CAAY,YCLtBQ,EAAYC,YAAW,CACzBC,WAAY,CACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,QAAS,OACTC,OAAQ,YACRC,OAAQ,QAEZA,OAAQ,CACJA,OAAQ,YAuDDC,MAnDf,YAA8B,IAAXC,EAAU,EAAVA,QAAU,EACDC,mBAAS,IADR,mBAClB5B,EADkB,KACZ6B,EADY,OAECD,mBAAS,IAFV,mBAElB1B,EAFkB,KAEX4B,EAFW,OAGDF,mBAAS,IAHR,mBAGlBzB,EAHkB,KAGZ4B,EAHY,KAKjBZ,EAAetB,qBAAWR,GAA1B8B,WAwBR,OArBgBF,IAsBZ,qBAAKlB,UAAU,mBAAf,SACI,uBAAMiC,SAAU,SAACnB,GAAD,OArBxB,SAAkBA,GAEdA,EAAGoB,iBACC/B,EAAMgC,QAAU/B,EAAK+B,SACrBf,EAAWnB,EAAME,EAAOC,GACxB0B,EAAQ,IACRC,EAAS,IACTC,EAAQ,IACRJ,GAAQ,IAagBQ,CAAStB,IAAKd,UAAU,aAAhD,UACI,qBAAKA,UAAU,kCAAf,SACI,cAAC,EAAD,CAAaO,SAAUuB,MAE3B,sBAAK9B,UAAU,aAAf,UACI,uBAAOA,UAAU,cAAjB,wBACA,uBAAQO,SAAU,SAAAO,GAAE,OAAIiB,EAASjB,EAAGC,OAAOC,QAAQhB,UAAU,cAAcqC,KAAK,SAEhF,uBAAOrC,UAAU,cAAjB,kBACA,0BAAWO,SAAU,SAAAO,GAAE,OAAIkB,EAAQlB,EAAGC,OAAOC,QAAQhB,UAAU,iBAAiBqC,KAAK,YAEzF,sBAAKrC,UAAU,eAAf,UACI,wBAAQqC,KAAK,SAASrC,UAAU,wBAAhC,oBACA,wBAAQK,QAAS,kBArB7BuB,GAAQ,GACRE,EAAQ,IACRC,EAAS,SACTC,EAAQ,KAkBiDhC,UAAU,wBAAvD,6BC3DdkB,EAAYC,YAAW,CACzBC,WAAY,CACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,QAAS,OACTC,OAAQ,YACRC,OAAQ,UAqCDY,MAhCf,YAAqD,IAApCC,EAAmC,EAAnCA,OAAQ3C,EAA2B,EAA3BA,YAAa4C,EAAc,EAAdA,YAAc,GAChCtB,IACQW,oBAAS,IAFe,mBAEzCY,EAFyC,KAEnCC,EAFmC,KAIhD,OACI,sBAAK1C,UAAU,4BAAf,UACL,sBAAKA,UAAU,gBAAf,UACC,oBAAIA,UAAU,eAAd,SAA8BuC,EAAOI,OACrC,qBAAK3C,UAAU,iBAAf,SAAkCuC,EAAOK,MAAOC,YAGjD,sBAAK7C,UAAU,cAAf,UACeyC,GACE,cAAC,EAAD,CAAUb,QAASc,IAGtBH,EAAOK,MAAME,KAAI,SAACpD,EAAMC,GACrB,OAAO,cAAC,EAAD,CAAMD,KAAMA,EAAMC,UAAWA,EAA2BC,YAAaA,GAAxBD,SAIrE,sBAAKK,UAAU,gBAAf,UACkB,IAAhBJ,GACe,wBAAQS,QAAS,kBAAMqC,GAAQ,IAAQ1C,UAAU,gCAAjD,wBAGhB,wBAAQK,QAASmC,EAAYO,KAAK,KAAKnD,GAAcI,UAAU,gCAA/D,8BCPW,EArCiB,WAC5B,OAAOgD,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,CACpDC,QAAS,CACR,CACCT,KAAM,OACNC,MAAO,IAER,CACCD,KAAM,cACNC,MAAO,IAER,CACCD,KAAM,OACNC,MAAO,QCoFIS,MA3Ff,WAAgB,IAAD,EACUxB,mBAAS,CAChCuB,QAAS,CACR,CACCT,KAAM,OACNC,MAAO,IAER,CACCD,KAAM,cACNC,MAAO,IAER,CACCD,KAAM,OACNC,MAAO,OAbI,mBACPU,EADO,KACDC,EADC,KAkBRC,EAAUC,sBAAW,sBAAC,4BAAAC,EAAA,sDACrBJ,EAAOK,IACbJ,EAAQD,GAFmB,2CAGxB,IAEJM,qBAAU,WACHJ,MACD,IAGNI,qBAAU,WACTV,aAAaW,QAAQ,OAAQb,KAAKc,UAAUR,MAC3C,CAACA,EAAMC,IAGT,IAAMf,EAAciB,uBAAY,SAAC7D,GAChC2D,GAAQ,SAAAQ,GAAS,IACRX,EAAYW,EAAZX,QAER,OADAA,EAAQxD,GAAagD,MAAMoB,OAAO,EAAIZ,EAAQxD,GAAagD,MAAOC,QAC3D,CAAEO,gBAEL,IAuCN,OACC,cAAC,EAAQa,SAAT,CAAkBjD,MAAO,CAAEI,WAjB5B,SAAoBnB,EAAME,EAAOC,GAChCmD,GAAQ,SAAAQ,GAAS,IACRX,EAAYW,EAAZX,QACF1D,EAAO,CACXwE,GAAIC,KAAKC,SAASC,eAAe,IAAIC,OAAO,EAAG,IAChDrE,KAAMA,EACNE,MAAOA,EACPC,KAAMA,EACNF,MAAM,IAAIqE,MAAOC,qBACjBC,QAAS,IAGV,OADArB,EAAQ,GAAGR,MAAM8B,KAAKhF,GACf,CAAE0D,eAK6BrD,SA9BxC,SAAkBH,EAAaD,GAC9B4D,GAAQ,SAAAQ,GAAS,IAGyB,EAElC,EAJCX,EAAYW,EAAZX,QACF1D,EAAO0D,EAAQxD,GAAagD,MAAMoB,OAAOrE,EAAW,GACtDC,EAAc,IAAOwD,EAAQP,QAChC,EAAAO,EAAQ,GAAGR,OAAM8B,KAAjB,oBAAyBhF,KAEzB,EAAA0D,EAAQxD,EAAc,GAAGgD,OAAM8B,KAA/B,oBAAuChF,IAExC,MAAO,CAAE0D,eAqBuCvD,WAtClD,SAAoBD,EAAaD,GAChC4D,GAAQ,SAAAQ,GAAS,IACRX,EAAYW,EAAZX,QAER,OADAA,EAAQxD,GAAagD,MAAMoB,OAAOrE,EAAW,GACtC,CAAEyD,gBAkCV,SACC,qBAAKpD,UAAU,UAAf,SACC,qBAAKA,UAAU,eAAf,SACEsD,EAAKF,QAAQN,KAAI,SAACP,EAAQ3C,GAC1B,OAAO,cAAC,EAAD,CAAQ2C,OAAQA,EAAQ3C,YAAaA,EAAa4C,YAAaA,GAAiB5C,aC7E9E+E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6506c852.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, { useContext} from 'react';\r\nimport { Card } from \"@material-ui/core\";\r\nimport Context from './Context'\r\nfunction Task( { task, taskIndex, columnIndex } ) {\r\n    const { deleteTask } = useContext(Context)\r\n    const { moveTask } = useContext(Context)\r\n    \r\n    return (\r\n       <div className=\"colum__item card\">\t\r\n            <div className=\"card__header\">\r\n                <h4 className=\"card__user-name\">{task.user}</h4>\r\n                <span className=\"card__create-date\">{task.date}</span>\r\n            </div>\r\n            <div className=\"card__body\">\r\n                <h4 className=\"card__title\">{task.title}</h4>\r\n                <p className=\"card__text\">\r\n                {task.text}\r\n                </p>    \r\n            </div>\r\n            <div className=\"card__footer\">\r\n                <button onClick={() => deleteTask(columnIndex, taskIndex)} className=\"card__btn btn-primary\">Delete</button>\r\n                <button onClick={() => moveTask(columnIndex, taskIndex)} className=\"card__btn btn-primary\">></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import React from 'react';\r\nimport {InputLabel, FormControl, Select} from \"@material-ui/core\";\r\n\r\nfunction SelectUsers({ onChange }) {\r\n\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" label=\"USA\" className=\"\">\r\n            <InputLabel htmlFor=\"outlined-age-native-simple\"></InputLabel>\r\n            <Select onChange={(ev) => onChange(ev.target.value )} native label=\"Select\">\r\n                <option key=\"1\">Select</option> \r\n                <option key=\"2\">Select1</option>  \r\n                <option key=\"3\">Select2</option>   \r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default SelectUsers","import React, { useState, useContext } from 'react';\r\nimport {Card, makeStyles, TextField, Button } from \"@material-ui/core\";\r\nimport SelectUsers from './SelectUsers'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Context from './Context'\r\n\r\nconst useStyles = makeStyles({\r\n    createTask: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        padding: '15px',\r\n        border: '1px solid',\r\n        margin: '15px',\r\n    },\r\n    margin: {\r\n        margin: '10px 0',\r\n    }\r\n})\r\n\r\nfunction FromTask({onClose}) {\r\n    const [user, setUser] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [text, setText] = useState('')\r\n    \r\n    const { createTask } = useContext(Context)\r\n\r\n\r\n    const classes = useStyles();\r\n   \r\n    function saveTask(ev) {\r\n      \r\n        ev.preventDefault()\r\n        if (title.trim() && text.trim()) {\r\n            createTask(user, title, text)\r\n            setUser('')\r\n            setTitle('')\r\n            setText('')\r\n            onClose(false)\r\n        }\r\n    }\r\n\r\n    function closeTaskFrom() {\r\n        onClose(false)\r\n        setUser('')\r\n        setTitle('')\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"colum__item card\">  \r\n            <form onSubmit={(ev) => saveTask(ev)} className=\"card__form\">\r\n                <div className=\"card__header card__header--form\">\r\n                    <SelectUsers onChange={setUser}/>\r\n                </div>\r\n                <div className=\"card__body\">\r\n                    <label className=\"card__label\">Task title</label>\r\n                    <input  onChange={ev => setTitle(ev.target.value)} className=\"card__input\" type=\"text\"/>\r\n\r\n                    <label className=\"card__label\">Task</label>\r\n                    <textarea  onChange={ev => setText(ev.target.value)} className=\"card__textarea\" type=\"text\"></textarea>\r\n                </div>\r\n                <div className=\"card__footer\">\r\n                    <button type=\"submit\" className=\"card__btn btn-primary\">Create</button>\r\n                    <button onClick={() => closeTaskFrom(false)} className=\"card__btn btn-primary\">Delete</button>\r\n                </div>\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FromTask\r\n\r\n\r\n\r\n{/* <Card className={classes.createTask}>\r\n<form action=\"\" onSubmit={saveTask}>\r\n    <SelectUsers onChange={setUser}/>\r\n    <TextField \r\n        value={title} \r\n        onChange={e => setTitle(e.target.value)} \r\n        className={classes.margin}\r\n        id=\"outlined-basic\" \r\n        label=\"Title\" \r\n        variant=\"outlined\" \r\n    />\r\n    <TextField\r\n        value={Text} onChange={e => setText(e.target.value)}\r\n        className={classes.margin}\r\n        id=\"outlined-multiline-static\"\r\n        label=\"Multiline\"\r\n        multiline\r\n        rows={4}\r\n        defaultValue=\"Default Value\"\r\n        variant=\"outlined\"\r\n    />\r\n    <div  className={classes.margin}>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className=\"{classes.button}\"\r\n            startIcon={<DeleteIcon />}\r\n        >\r\n            Delete\r\n        </Button>\r\n    \r\n        <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"{classes.button}\"\r\n            endIcon={<SaveIcon>Save</SaveIcon>}\r\n        >\r\n            Save\r\n        </Button>\r\n    </div>\r\n</form>\r\n</Card> */}","import React, {useState} from 'react';\r\nimport { Paper, makeStyles, Button } from \"@material-ui/core\";\r\nimport Task from './Task'\r\nimport FromTask from './FromTask'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    createTask: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        padding: '15px',\r\n        border: '1px solid',\r\n        margin: '15px',\r\n    },\r\n\r\n})\r\n\r\nfunction Column({column, columnIndex, clearColumn}) {\r\n    const classes = useStyles();\r\n    const [form, setFrom] = useState(false)\r\n\r\n    return (\r\n        <div className=\"board-canvas__colum colum\">\r\n\t\t\t<div className=\"colum__header\">\r\n\t\t\t\t<h2 className=\"colum__title\">{column.name}</h2>\r\n\t\t\t\t<div className=\"colum__counter\">{(column.tasks).length}</div>\t\r\n\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t<div className=\"colum__body\">\r\n                { form && \r\n                    <FromTask onClose={setFrom}/>\r\n                }\r\n\r\n                {column.tasks.map((task, taskIndex) => {\r\n                    return <Task task={task} taskIndex={taskIndex} key={taskIndex} columnIndex={columnIndex}/> \r\n                })}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"colum__footer\">\r\n\t\t\t\t{columnIndex === 0 && \r\n                    <button onClick={() => setFrom(true)}  className=\"colum__footer-btn btn-primary\">Create new</button>\r\n                }\r\n       \r\n\t\t\t\t<button onClick={clearColumn.bind(null,columnIndex)} className=\"colum__footer-btn btn-primary\">Clean all</button>\r\n\t\t\t</div>\t\t\r\n\t\t</div>\t  \r\n    )\r\n}\r\n\r\nexport default Column","const getTaskFromLocalStorage = () => {\r\n    return JSON.parse(localStorage.getItem('data') || {\r\n\t\tcolumns: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Todo',\r\n\t\t\t\ttasks: []\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'In Progress',\r\n\t\t\t\ttasks: []\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Done',\r\n\t\t\t\ttasks: []\r\n\t\t\t},\r\n\t\t]\r\n    })\r\n}\r\n\r\n// export let select = document.createElement('select');\r\n// select.setAttribute('class', 'form__select');\r\n\r\n//  const getUserData = () => {\r\n//     return fetch('https://jsonplaceholder.typicode.com/users')\r\n//         .then(res => res.json())\r\n//         .then(user => user.forEach(user => {\r\n//             setUsername(user.username) \r\n//         })) \r\n// }\r\n// getUserData()\r\n\r\n// function setUsername(name) {\r\n//     let option = document.createElement('option');\r\n//     option.append(name);\r\n//     select.append(option);\r\n// }\r\n\r\nexport default {\r\n    getTaskFromLocalStorage,\r\n}","import './App.css';\nimport Column from './components/Column'\nimport React, {useCallback, useEffect, useState, useRef} from 'react';\nimport Context from './components/Context'\nimport TaskService from './components/TaskService';\n\nfunction App() {\n\tconst [data, setData] = useState({\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\tname: 'Todo',\n\t\t\t\ttasks: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'In Progress',\n\t\t\t\ttasks: []\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Done',\n\t\t\t\ttasks: []\n\t\t\t},\n\t\t]\n\t});\n\n\tconst getTask = useCallback(async () => {\n\t\tconst data = TaskService.getTaskFromLocalStorage();\n\t\tsetData(data);\n\t }, []);\n\n\tuseEffect(() => {\n        getTask();\n    }, []);\n\t\n\t\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('data', JSON.stringify(data))\n\t},[data, setData])\n\n\n\tconst clearColumn = useCallback((columnIndex) => {\n\t\tsetData(prev => {\n\t\t\tconst { columns } = prev\n\t\t\tcolumns[columnIndex].tasks.splice(0, (columns[columnIndex].tasks).length )\n\t\t\treturn { columns }\n\t\t})\n    }, []);\n\n\tfunction deleteTask(columnIndex, taskIndex) {\n\t\tsetData(prev => {\n\t\t\tconst { columns } = prev\n\t\t\tcolumns[columnIndex].tasks.splice(taskIndex, 1)\n\t\t\treturn { columns }\n\t\t})\n\t}\n\n\tfunction moveTask(columnIndex, taskIndex) {\n\t\tsetData(prev => {\n\t\t\tconst { columns } = prev\n\t\t\tconst task = columns[columnIndex].tasks.splice(taskIndex, 1)\n\t\t\tif((columnIndex + 1) === columns.length) {\n\t\t\t\tcolumns[0].tasks.push(...task)\n\t\t\t} else {\n\t\t\t\tcolumns[columnIndex + 1].tasks.push(...task)\n\t\t\t}\n\t\t\treturn { columns }\n\t\t})\n\t}\n\n\tfunction createTask(user, title, text) {\n\t\tsetData(prev => {\n\t\t\tconst { columns } = prev\n\t\t\tconst task = {\n\t\t\t \tid: Math.random().toLocaleString(36).substr(2, 16),\n\t\t\t\tuser: user,\n\t\t\t\ttitle: title,\n\t\t\t\ttext: text,\n\t\t\t\tdate: new Date().toLocaleDateString(),\n\t\t\t\tcomment: '',\t\n\t\t\t}\n\t\t\tcolumns[0].tasks.push(task)\n\t\t\treturn { columns }\n\t\t})\n\t}\t\n\n\treturn (\n\t\t<Context.Provider value={{ createTask, moveTask, deleteTask }}>\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"board-canvas\">\n\t\t\t\t\t{data.columns.map((column, columnIndex) => {\n\t\t\t\t\t\treturn <Column column={column} columnIndex={columnIndex} clearColumn={clearColumn}key={columnIndex}/> \n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Context.Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}